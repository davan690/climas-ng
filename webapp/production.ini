
###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:climas-ng]
#####################################################################
#
#  Actual Config
climas.old_report_data_path = /srv/wallacewebapp-testdata/reports/regions

# directories holding data
climas.species_data_path = /rdsi/wallace2/W2_website/species
climas.climate_data_path = /rdsi/wallace2/W2_website/climate
climas.summaries_data_path = /rdsi/wallace2/W2_website

climas.region_data_path = /rdsi/climas/regions

# dir holding the LaTeX template used for making PDFs
climas.doc_template_path = /srv/wallacewebapp/climasng/templates/doctemplates

# dir holding the dir tree of report sections
climas.report_section_path = /srv/wallacewebapp/climasng/reportcontent/sections

# URLs the client needs to use to get stuff.  The {{ templating }}
# here is resolved in JS in the client's browser.
#
# URLs for getting map files
# climas.species_data_url = {{ location.protocol }}//{{ location.host }}/speciesdata/{{ sppGroup }}/species/{{ sppName }}/1km
climas.species_data_url = {{ location.protocol }}//{{ location.host }}/speciesdata/{{ path }}/summaries_temperature
climas.climate_data_url = {{ location.protocol }}//{{ location.host }}/climatedata/{{ path }}
climas.summaries_data_url = {{ location.protocol }}//{{ location.host }}/summariesdata/{{ path }}
climas.biodiv_data_url = {{ location.protocol }}//{{ location.host }}/speciesdata/{{ sppGroup }}

# URL for getting maps served as map tiles
climas.raster_api_url = {{ location.protocol }}//climas-mapserver.hpc.jcu.edu.au:10600/api/raster/1/wms_data_url

# user and password for adding geotiffs to geoserver
climas.gs_user = admin
climas.gs_pass = geoserver

# sqlalchemy.url = sqlite:///%(here)s/climasng/db/climasng.sqlite
sqlalchemy.url = sqlite:///srv/wallacewebapp/climasng/db/climasng.sqlite

#
#####################################################################

use = egg:climas-ng#main

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_tm

#---------- Pipeline Configuration ----------
[filter:paste_prefix]
use = egg:PasteDeploy#prefix

[pipeline:main]
pipeline =
    paste_prefix
    climas-ng

[server:main]
use = egg:waitress#main
# in prod, use nginx or whatever to revproxy port 80
host = 0.0.0.0
port = 8090

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, climasng, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_climasng]
level = WARN
handlers =
qualname = climasng

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
